// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: proto/exchange.proto

package currency_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExchangeRateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BaseCurrency   string                 `protobuf:"bytes,1,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	TargetCurrency string                 `protobuf:"bytes,2,opt,name=target_currency,json=targetCurrency,proto3" json:"target_currency,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExchangeRateRequest) Reset() {
	*x = ExchangeRateRequest{}
	mi := &file_proto_exchange_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateRequest) ProtoMessage() {}

func (x *ExchangeRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRateRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *ExchangeRateRequest) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *ExchangeRateRequest) GetTargetCurrency() string {
	if x != nil {
		return x.TargetCurrency
	}
	return ""
}

type ExchangeRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrencyName  string                 `protobuf:"bytes,1,opt,name=currency_name,json=currencyName,proto3" json:"currency_name,omitempty"`
	Rate          float64                `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRateResponse) Reset() {
	*x = ExchangeRateResponse{}
	mi := &file_proto_exchange_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRateResponse) ProtoMessage() {}

func (x *ExchangeRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRateResponse.ProtoReflect.Descriptor instead.
func (*ExchangeRateResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeRateResponse) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *ExchangeRateResponse) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ExchangeRateResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ExchangeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BaseCurrency   string                 `protobuf:"bytes,1,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	TargetCurrency string                 `protobuf:"bytes,2,opt,name=target_currency,json=targetCurrency,proto3" json:"target_currency,omitempty"`
	Amount         float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExchangeRequest) Reset() {
	*x = ExchangeRequest{}
	mi := &file_proto_exchange_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRequest) ProtoMessage() {}

func (x *ExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{2}
}

func (x *ExchangeRequest) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *ExchangeRequest) GetTargetCurrency() string {
	if x != nil {
		return x.TargetCurrency
	}
	return ""
}

func (x *ExchangeRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ExchangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeResponse) Reset() {
	*x = ExchangeResponse{}
	mi := &file_proto_exchange_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeResponse) ProtoMessage() {}

func (x *ExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeResponse.ProtoReflect.Descriptor instead.
func (*ExchangeResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{3}
}

func (x *ExchangeResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ExchangeResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExchangeResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_proto_exchange_proto protoreflect.FileDescriptor

const file_proto_exchange_proto_rawDesc = "" +
	"\n" +
	"\x14proto/exchange.proto\x12\bcurrency\"c\n" +
	"\x13ExchangeRateRequest\x12#\n" +
	"\rbase_currency\x18\x01 \x01(\tR\fbaseCurrency\x12'\n" +
	"\x0ftarget_currency\x18\x02 \x01(\tR\x0etargetCurrency\"m\n" +
	"\x14ExchangeRateResponse\x12#\n" +
	"\rcurrency_name\x18\x01 \x01(\tR\fcurrencyName\x12\x12\n" +
	"\x04rate\x18\x02 \x01(\x01R\x04rate\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\"w\n" +
	"\x0fExchangeRequest\x12#\n" +
	"\rbase_currency\x18\x01 \x01(\tR\fbaseCurrency\x12'\n" +
	"\x0ftarget_currency\x18\x02 \x01(\tR\x0etargetCurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"d\n" +
	"\x10ExchangeResponse\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp2\xaa\x01\n" +
	"\x0fCurrencyService\x12R\n" +
	"\x0fGetExchangeRate\x12\x1d.currency.ExchangeRateRequest\x1a\x1e.currency.ExchangeRateResponse\"\x00\x12C\n" +
	"\bExchange\x12\x19.currency.ExchangeRequest\x1a\x1a.currency.ExchangeResponse\"\x00B$Z\"currency_service/proto;currency_v1b\x06proto3"

var (
	file_proto_exchange_proto_rawDescOnce sync.Once
	file_proto_exchange_proto_rawDescData []byte
)

func file_proto_exchange_proto_rawDescGZIP() []byte {
	file_proto_exchange_proto_rawDescOnce.Do(func() {
		file_proto_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_exchange_proto_rawDesc), len(file_proto_exchange_proto_rawDesc)))
	})
	return file_proto_exchange_proto_rawDescData
}

var file_proto_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_exchange_proto_goTypes = []any{
	(*ExchangeRateRequest)(nil),  // 0: currency.ExchangeRateRequest
	(*ExchangeRateResponse)(nil), // 1: currency.ExchangeRateResponse
	(*ExchangeRequest)(nil),      // 2: currency.ExchangeRequest
	(*ExchangeResponse)(nil),     // 3: currency.ExchangeResponse
}
var file_proto_exchange_proto_depIdxs = []int32{
	0, // 0: currency.CurrencyService.GetExchangeRate:input_type -> currency.ExchangeRateRequest
	2, // 1: currency.CurrencyService.Exchange:input_type -> currency.ExchangeRequest
	1, // 2: currency.CurrencyService.GetExchangeRate:output_type -> currency.ExchangeRateResponse
	3, // 3: currency.CurrencyService.Exchange:output_type -> currency.ExchangeResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_exchange_proto_init() }
func file_proto_exchange_proto_init() {
	if File_proto_exchange_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_exchange_proto_rawDesc), len(file_proto_exchange_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_exchange_proto_goTypes,
		DependencyIndexes: file_proto_exchange_proto_depIdxs,
		MessageInfos:      file_proto_exchange_proto_msgTypes,
	}.Build()
	File_proto_exchange_proto = out.File
	file_proto_exchange_proto_goTypes = nil
	file_proto_exchange_proto_depIdxs = nil
}
